version: "3.9"

services:
  backend:
    container_name: tencryptos-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=tencryptosdb
      - DB_USER=tencryptos
      - DB_PASSWORD=devpass
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - tencryptos_net

  frontend:
    container_name: tencryptos-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    depends_on:
      - backend
    restart: always
    networks:
      - tencryptos_net

  db:
    container_name: tencryptos-db
    image: postgres:15
    environment:
      POSTGRES_USER: tencryptos
      POSTGRES_PASSWORD: devpass
      POSTGRES_DB: tencryptosdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tencryptos"]
      interval: 30s
      timeout: 5s
      retries: 5
    networks:
      - tencryptos_net

  nginx:
    container_name: tencryptos-nginx
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - frontend
      - backend
    restart: always
    networks:
      - tencryptos_net

volumes:
  postgres_data:

networks:
  tencryptos_net:
    driver: bridge
