
services:
  db:
    image: postgres:15
    container_name: tencryptos-db
    restart: always
    environment:
      POSTGRES_USER: tencryptos
      POSTGRES_PASSWORD: devpass
      POSTGRES_DB: tencryptosdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tencryptos -d tencryptosdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    container_name: tencryptos-backend
    build:
      context: ./backend
    ports:
      - "8000:8000"
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=tencryptosdb
      - DB_USER=tencryptos
      - DB_PASSWORD=devpass
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: >
      bash -c "uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"

  go-bootstrap:
    build:
      context: ./infrastructure/bootstrap
      dockerfile: Dockerfile
    container_name: bootstrap
    depends_on:
      backend:
        condition: service_healthy
    environment:
      AWS_REGION: us-east-1
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      AWS_ENDPOINT: http://host.docker.internal:4566
      S3_BUCKET_NAME: tencryptos-backups
      SQS_QUEUE_NAME: tencryptos-queue
    restart: on-failure
    networks:
      - tencryptos_net

volumes:
  postgres_data:
networks:
  tencryptos_net:
    driver: bridge
